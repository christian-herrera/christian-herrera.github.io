# Habilitar solo si se utilizará la funión OpenPGP de la Yubikey
#SSH_AUTH_SOCK="/run/user/1000/gnupg/S.gpg-agent.ssh"


# Funciones para el Cifrado y Des-cifrado
export ringID="AD175429B6768C5C"
export encID="98BC4D49828D431F"
export signID="56AE45D7836C1B10"
export authID="B457CB6274048A24"


gpg-asym() {
    local file="$1"
    local detach_sign=false

    # Colores
    local COLOR_RESET="\033[0m"
    local COLOR_RED="\033[31m"
    local COLOR_GREEN="\033[32m"
    local COLOR_YELLOW="\033[33m"
    local COLOR_BLUE="\033[34m"


    # Función de ayuda
    if [[ "$1" == "-h" || "$1" == "--help" ]]; then
        echo -e "\n ${COLOR_BLUE}Uso:${COLOR_RESET} gpg-asym <archivo> [--DetachSign]"
        echo -e " ${COLOR_BLUE}Descripción:${COLOR_RESET} Cifra Asimetricamente y luego firma según la presencia del parametro DetachSign"
        echo -e " ${COLOR_BLUE}Parámetros:${COLOR_RESET}"
        echo -e "      <archivo>\t\tArchivo a cifrar y firmar."
        echo -e "    [--DetachSign]\tEste parameetro indica que la firma se hará de manera separada."
        echo -e "     -h, --help\t\tMuestra esta ayuda."
        echo -e " ${COLOR_BLUE}Salida:${COLOR_RESET}: Genera un archivo cifrado con la extensión '.asc'. y otro con '.asc.sig'"
        return 0
    fi


    # Verificar si se pasó la opción --DetachSign
    if [[ "$2" == "--DetachSign" ]]; then
        detach_sign=true
    fi

    # Verificar si el archivo existe
    if [[ ! -f "$file" ]]; then
        echo -e "\n[${COLOR_RED}ERROR${COLOR_RESET}] El archivo '$file' no existe."
        return 1
    fi

    echo -e "\n[${COLOR_YELLOW}INFO${COLOR_RESET}] Cifrando archivo '$file'..."
    if $detach_sign; then
        echo -e "[${COLOR_YELLOW}INFO${COLOR_RESET}] Firmando de manera separada (detach)...\n"
        sleep 1

        # ==> Cifrado y firma por separado
        gpg --armor -o "${file}.asc" --recipient "$encID" --encrypt "$file"
        gpg --armor -o "${file}.asc.sig" --detach-sign --local-user "$signID" "${file}.asc"

        if [[ -f "${file}.asc" && -f "${file}.asc.sig" ]]; then
            echo -e "\n[${COLOR_GREEN} OK ${COLOR_RESET}] Archivo cifrado y firmado con éxito!"
        else
            echo -e "\n[${COLOR_RED}ERROR${COLOR_RESET}] Algo salió mal durante el cifrado o firma."
        fi
    else
        echo -e "[${COLOR_YELLOW}INFO${COLOR_RESET}] Firmando de manera adjunta (attach)...\n"
        sleep 1

        # ==> Cifrado y firma en un mismo archivo
        gpg --armor -o "${file}.asc" --recipient "$encID" --sign --local-user "$signID" --encrypt "$file"

        if [[ -f "${file}.asc" ]]; then
            echo -e "\n[${COLOR_GREEN} OK ${COLOR_RESET}] Archivo cifrado y firmado con éxito!"
        else
            echo -e "\n[${COLOR_RED}ERROR${COLOR_RESET}] Algo salió mal durante el cifrado o firma."
        fi
    fi
}



gpg-kill-agent() {
    # Colores
    local COLOR_RESET="\033[0m"
    local COLOR_RED="\033[31m"
    local COLOR_GREEN="\033[32m"
    local COLOR_YELLOW="\033[33m"
    local COLOR_BLUE="\033[34m"

    # Función de ayuda
    if [[ "$1" == "-h" || "$1" == "--help" ]]; then
        echo -e "\n ${COLOR_BLUE}Uso:${COLOR_RESET} gpg-kill-agent"
        echo -e " ${COLOR_BLUE}Descripción:${COLOR_RESET} Finaliza todos los procesos correspondientes a gpg-agent."
        return 0
    fi

    # Finalizar todas las instancias de gpg-agent
    if sudo pkill gpg-agent; then
        echo -e "[\033[32m OK \033[0m] Todos los procesos gpg-agent han sido finalizados."
    else
        echo -e "[\033[33mINFO\033[0m] No se encontró el proceso gpg-agent en ejecución."
    fi
}


gpg-sym () {
    # Colores
    local COLOR_RESET="\033[0m"
    local COLOR_RED="\033[31m"
    local COLOR_GREEN="\033[32m"
    local COLOR_YELLOW="\033[33m"
    local COLOR_BLUE="\033[34m"

    # Función de ayuda
    if [[ "$1" == "-h" || "$1" == "--help" ]]; then
        echo -e "\n ${COLOR_BLUE}Uso:${COLOR_RESET} gpg-sym <archivo>"
        echo -e " ${COLOR_BLUE}Descripción:${COLOR_RESET} Cifra y firma un archivo usando GPG de forma simétrica."
        echo -e " ${COLOR_BLUE}Parámetros:${COLOR_RESET}"
        echo -e "    <archivo>\tArchivo a cifrar y firmar."
        echo -e "    -h, --help\tMuestra esta ayuda."
        echo -e " ${COLOR_BLUE}Salida:${COLOR_RESET}: Genera un archivo cifrado con la extensión '.asc'."
        return 0
    fi
    

    # Verifica que se pasó el archivo
    if [[ ! -f "${1}" ]]; then
        echo -e "\n[${COLOR_RED}ERROR${COLOR_RESET}] Debes pasar un archivo a cifrar"
        return 0;
    fi

    echo -e "[${COLOR_YELLOW}INFO${COLOR_RESET}] Cifrando y firmando archivo...\n"
    sleep 1

    # Cifra simetricamente
    gpg -a -o "${1}.asc" -u "$signID" -s -c "$1"

    if [[ -f "${1}.asc" ]]; then
        echo -e "\n[${COLOR_GREEN} OK ${COLOR_RESET}] Archivo cifrado y firmado con éxito!"
    else
        echo -e "\n[${COLOR_RED}ERROR${COLOR_RESET}] Algo salió mal durante el cifrado o firma."
    fi
}